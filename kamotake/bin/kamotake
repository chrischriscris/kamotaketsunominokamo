#!/usr/bin/env ruby

require "fileutils"
require_relative "../lib/utils"
require_relative "../lib/nonogram"

# Entry point for kamotake
def main
  bin_name = File.basename($PROGRAM_NAME)

  # If no arguments, print usage
  if ARGV.empty?
    puts "#{bin_name}: No arguments provided"
    puts "Usage: #{bin_name} FILE [-d] [-c]"
    exit 1
  end

  filename = ARGV[0]
  debug = ARGV.include?("-d")
  compact = ARGV.include?("-c")

  # Parse txt provide by argument
  begin
    nonogram = Nonogram.new(filename)
  rescue Errno::ENOENT => e
    puts "#{bin_name}: #{filename}: No such file"
    exit 1
  rescue => e
    puts "#{bin_name}: #{filename}: #{e.message}"
    exit 1
  end

  nonogram.solve

  if !debug
    puts "Cleaning DIMACS and SAT solution files... ðŸš¯ (You can keep them with the -d flag)"
    FileUtils.rm_rf(".tmp_kamotake")
  end

  puts

  if compact
    puts nonogram.to_s_compact
  else
    puts nonogram.to_s
  end
end

main if __FILE__ == $0
